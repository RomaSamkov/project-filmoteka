{"version":3,"sources":["js/refs.js","js/api.js","js/onSearchByKeyWord.js","js/renderTrendsOnMain.js","index.js"],"names":["refs","formSearch","document","querySelector","galleryContainer","filmsContainer","API_KEY","BASE_URL","API_URL","IMG_URL","SEARCH_URL","ApiServise","constructor","userSearch","page","getTrendingFilm","fetch","then","trendingFilm","ok","json","onSearchFilm","incrementPage","response","setPage","numberPage","resetPage","searchFilm","newSearch","userFilms","onSearch","ev","preventDefault","innerHTML","target","elements","searchQuery","value","trim","console","log","catch","error","addEventListener","renderTrendsOnMain","films","results","murkup","map","film","original_title","poster_path","genre_ids","release_date","id","join","insertAdjacentHTML"],"mappings":"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","file":"src.e44c8265.js","sourceRoot":"../src","sourcesContent":["export const refs = {\n  formSearch: document.querySelector('.header__form'),\n  galleryContainer: document.querySelector('.gallery'),\n  filmsContainer: document.querySelector('.film__list'),\n};\n","export const API_KEY = 'f534638cb3304b9759e126ecf8f1bc28';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n// const API_URL = `${BASE_URL}/discover/movie?sort_by=popularity.desc&api_key=${API_KEY}`;\nconst API_URL = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst SEARCH_URL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}`;\n\nexport default class ApiServise {\n  constructor() {\n    this.userSearch = '';\n    this.page = 1;\n  }\n  getTrendingFilm() {\n    return fetch(`${API_URL}&page=${this.page}`).then(trendingFilm => {\n      if (!trendingFilm.ok) {\n        return;\n      }\n      return trendingFilm.json();\n    });\n  }\n  onSearchFilm() {\n    this.incrementPage();\n    return fetch(`${SEARCH_URL}&query=${this.userSearch}&page=${this.page}`).then(response => {\n      if (!response.ok) {\n        return;\n      }\n      return response.json();\n    });\n  }\n  incrementPage() {\n    this.page += 1;\n  }\n  setPage(numberPage) {\n    this.page = numberPage;\n  }\n  resetPage() {\n    this.page = 0;\n  }\n  get searchFilm() {\n    return this.userSearch;\n  }\n  set searchFilm(newSearch) {\n    this.userSearch = newSearch;\n  }\n}\n","import { refs } from './refs';\nimport ApiServise from './api';\n\nconst userFilms = new ApiServise();\n\nconst onSearch = ev => {\n  ev.preventDefault();\n  refs.galleryContainer.innerHTML = '';\n  userFilms.searchFilm = ev.target.elements.searchQuery.value.trim();\n  if (!userFilms.searchFilm) {\n    userFilms.resetPage();\n    userFilms.getTrendingFilm().then(response => console.log('рисуем разметку'));\n    return;\n  }\n  userFilms.resetPage();\n  userFilms\n    .onSearchFilm()\n    .then(response => console.log('Рисуем разметку'))\n    .catch(error => console.log('Error'));\n};\n\nrefs.formSearch.addEventListener('submit', onSearch);\n","import { refs } from './refs';\nimport ApiServise from './api';\nimport { IMG_URL } from './api';\nimport { API_KEY } from './api';\n\nconst userFilms = new ApiServise();\n\nuserFilms.getTrendingFilm().then(renderTrendsOnMain);\n\nexport default function renderTrendsOnMain(films) {\n  console.log(films.results);\n  const murkup = films.results\n    .map(film => {\n      const { original_title, poster_path, genre_ids, release_date, id } = film;\n      return `\n        <a class=\"film__link\" href=\"https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}\"><img src=\"${IMG_URL}${poster_path}\" alt=\"${original_title}\" loading=\"lazy\" class=\"film__image\"/></a>\n      \n      <div class=\"info\">\n        <h2 class=\"info__title\">${original_title}</h2>\n        <div class=\"info__wrap\">\n         {{#each genre_ids}}\n             <p class=\"info__title info__description\">{{this}}</p>\n         {{/each}}\n          <p class=\"info__title info__description\">${release_date}</p>\n        </div>\n      </div>\n\n     </a>\n        `;\n    })\n    .join('');\n\n  refs.filmsContainer.insertAdjacentHTML('beforeend', murkup);\n}\n","import './sass/main.scss';\nimport './js/refs.js';\nimport './js/api.js';\nimport './js/onSearchByKeyWord.js';\nimport './js/renderTrendsOnMain.js';\nconsole.log('Hello World');\n"]}